{"id":"github.com/lyfeloopinc/lyfebloc-network","consumes":["application/json"],"produces":["application/json"],"swagger":"2.0","info":{"description":"Chain github.com/lyfeloopinc/lyfebloc-network REST API","title":"HTTP API Console","contact":{"name":"github.com/lyfeloopinc/lyfebloc-network"},"version":"version not set"},"paths":{"/cosmos.evm.erc20.v1.Msg/RegisterERC20":{"post":{"tags":["Msg"],"summary":"RegisterERC20 defines a governance operation for registering a token pair\nfor the specified erc20 contract. The authority is hard-coded to the Cosmos\nSDK x/gov module account","operationId":"Erc20Msg_RegisterERC20","parameters":[{"description":"MsgRegisterERC20 is the Msg/RegisterERC20 request type for registering\nan Erc20 contract token pair.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/cosmos.evm.erc20.v1.MsgRegisterERC20"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.erc20.v1.MsgRegisterERC20Response"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos.evm.erc20.v1.Msg/ToggleConversion":{"post":{"tags":["Msg"],"summary":"ToggleConversion defines a governance operation for enabling/disabling a\ntoken pair conversion. The authority is hard-coded to the Cosmos SDK x/gov\nmodule account","operationId":"Erc20Msg_ToggleConversion","parameters":[{"description":"MsgToggleConversion is the Msg/MsgToggleConversion request type for toggling\nan Erc20 contract conversion capability.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/cosmos.evm.erc20.v1.MsgToggleConversion"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.erc20.v1.MsgToggleConversionResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos.evm.erc20.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a governance operation for updating the x/erc20 module\nparameters. The authority is hard-coded to the Cosmos SDK x/gov module\naccount","operationId":"Erc20Msg_UpdateParams","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/cosmos.evm.erc20.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.erc20.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos.evm.feemarket.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defined a governance operation for updating the x/feemarket\nmodule parameters. The authority is hard-coded to the Cosmos SDK x/gov\nmodule account","operationId":"Erc20Msg_UpdateParamsMixin16","parameters":[{"description":"MsgUpdateParams defines a Msg for updating the x/feemarket module parameters.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/cosmos.evm.feemarket.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.feemarket.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos.evm.vm.v1.Msg/RegisterPreinstalls":{"post":{"tags":["Msg"],"summary":"RegisterPreinstalls defines a governance operation for directly registering\npreinstalled contracts in the EVM. The authority is the same as is used for\nParams updates.","operationId":"Erc20Msg_RegisterPreinstalls","parameters":[{"description":"MsgRegisterPreinstalls defines a Msg for creating preinstalls in evm state.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.MsgRegisterPreinstalls"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.MsgRegisterPreinstallsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos.evm.vm.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defined a governance operation for updating the x/vm module\nparameters. The authority is hard-coded to the Cosmos SDK x/gov module\naccount","operationId":"Erc20Msg_UpdateParamsMixin26","parameters":[{"description":"MsgUpdateParams defines a Msg for updating the x/vm module parameters.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/erc20/v1/params":{"get":{"tags":["Query"],"summary":"Params retrieves the erc20 module params","operationId":"Erc20Query_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.erc20.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/erc20/v1/token_pairs":{"get":{"tags":["Query"],"summary":"TokenPairs retrieves registered token pairs (mappings)x","operationId":"Erc20Query_TokenPairs","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.erc20.v1.QueryTokenPairsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/erc20/v1/token_pairs/{token}":{"get":{"tags":["Query"],"summary":"TokenPair retrieves a registered token pair (mapping)","operationId":"Erc20Query_TokenPair","parameters":[{"type":"string","description":"token identifier can be either the hex contract address of the ERC20 or the\nCosmos base denomination","name":"token","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.erc20.v1.QueryTokenPairResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/erc20/v1/tx/convert_coin":{"get":{"tags":["Msg"],"summary":"ConvertCoin mints a ERC20 token representation of the native Cosmos coin\nthat is registered on the token mapping.","operationId":"Erc20Msg_ConvertCoin","parameters":[{"type":"string","name":"coin.denom","in":"query"},{"type":"string","name":"coin.amount","in":"query"},{"type":"string","description":"receiver is the hex address to receive ERC20 token","name":"receiver","in":"query"},{"type":"string","description":"sender is the cosmos bech32 address from the owner of the given Cosmos\ncoins","name":"sender","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.erc20.v1.MsgConvertCoinResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/erc20/v1/tx/convert_erc20":{"get":{"tags":["Msg"],"summary":"ConvertERC20 mints a native Cosmos coin representation of the ERC20 token\ncontract that is registered on the token mapping.","operationId":"Erc20Msg_ConvertERC20","parameters":[{"type":"string","description":"contract_address of an ERC20 token contract, that is registered in a token\npair","name":"contract_address","in":"query"},{"type":"string","description":"amount of ERC20 tokens to convert","name":"amount","in":"query"},{"type":"string","description":"receiver is the bech32 address to receive native Cosmos coins","name":"receiver","in":"query"},{"type":"string","description":"sender is the hex address from the owner of the given ERC20 tokens","name":"sender","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.erc20.v1.MsgConvertERC20Response"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/feemarket/v1/base_fee":{"get":{"tags":["Query"],"summary":"BaseFee queries the base fee of the parent block of the current block.","operationId":"Erc20Query_BaseFee","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.feemarket.v1.QueryBaseFeeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/feemarket/v1/block_gas":{"get":{"tags":["Query"],"summary":"BlockGas queries the gas used at a given block height","operationId":"Erc20Query_BlockGas","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.feemarket.v1.QueryBlockGasResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/feemarket/v1/params":{"get":{"tags":["Query"],"summary":"Params queries the parameters of x/feemarket module.","operationId":"Erc20Query_ParamsMixin15","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.feemarket.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/precisebank/v1/fractional_balance/{address}":{"get":{"tags":["Query"],"summary":"FractionalBalance returns only the fractional balance of an address. This\ndoes not include any integer balance.","operationId":"Erc20Query_FractionalBalance","parameters":[{"type":"string","description":"address is the account address to query  fractional balance for.","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.precisebank.v1.QueryFractionalBalanceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/precisebank/v1/remainder":{"get":{"tags":["Query"],"summary":"Remainder returns the amount backed by the reserve, but not yet owned by\nany account, i.e. not in circulation.","operationId":"Erc20Query_Remainder","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.precisebank.v1.QueryRemainderResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/account/{address}":{"get":{"tags":["Query"],"summary":"Account queries an Ethereum account.","operationId":"Erc20Query_Account","parameters":[{"type":"string","description":"address is the ethereum hex address to query the account for.","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryAccountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/balances/{address}":{"get":{"tags":["Query"],"summary":"Balance queries the balance of a the EVM denomination for a single\naccount.","operationId":"Erc20Query_Balance","parameters":[{"type":"string","description":"address is the ethereum hex address to query the balance for.","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryBalanceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/base_fee":{"get":{"tags":["Query"],"summary":"BaseFee queries the base fee of the parent block of the current block,\nit's similar to feemarket module's method, but also checks london hardfork\nstatus.","operationId":"Erc20Query_BaseFeeMixin25","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryBaseFeeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/codes/{address}":{"get":{"tags":["Query"],"summary":"Code queries the balance of all coins for a single account.","operationId":"Erc20Query_Code","parameters":[{"type":"string","description":"address is the ethereum hex address to query the code for.","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryCodeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/config":{"get":{"tags":["Query"],"summary":"Config queries the EVM configuration","operationId":"Erc20Query_Config","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryConfigResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/cosmos_account/{address}":{"get":{"tags":["Query"],"summary":"CosmosAccount queries an Ethereum account's Cosmos Address.","operationId":"Erc20Query_CosmosAccount","parameters":[{"type":"string","description":"address is the ethereum hex address to query the account for.","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryCosmosAccountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/estimate_gas":{"get":{"tags":["Query"],"summary":"EstimateGas implements the `eth_estimateGas` rpc api","operationId":"Erc20Query_EstimateGas","parameters":[{"type":"string","format":"byte","description":"args uses the same json format as the json rpc api.","name":"args","in":"query"},{"type":"string","format":"uint64","description":"gas_cap defines the default gas cap to be used","name":"gas_cap","in":"query"},{"type":"string","format":"byte","description":"proposer_address of the requested block in hex format","name":"proposer_address","in":"query"},{"type":"string","format":"int64","description":"chain_id is the eip155 chain id parsed from the requested block header","name":"chain_id","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.EstimateGasResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/eth_call":{"get":{"tags":["Query"],"summary":"EthCall implements the `eth_call` rpc api","operationId":"Erc20Query_EthCall","parameters":[{"type":"string","format":"byte","description":"args uses the same json format as the json rpc api.","name":"args","in":"query"},{"type":"string","format":"uint64","description":"gas_cap defines the default gas cap to be used","name":"gas_cap","in":"query"},{"type":"string","format":"byte","description":"proposer_address of the requested block in hex format","name":"proposer_address","in":"query"},{"type":"string","format":"int64","description":"chain_id is the eip155 chain id parsed from the requested block header","name":"chain_id","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.MsgEthereumTxResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/ethereum_tx":{"post":{"tags":["Msg"],"summary":"EthereumTx defines a method submitting Ethereum transactions.","operationId":"Erc20Msg_EthereumTx","parameters":[{"type":"string","format":"byte","description":"from is the bytes of ethereum signer address. This address value is checked\nagainst the address derived from the signature (V, R, S) using the\nsecp256k1 elliptic curve","name":"from","in":"query"},{"type":"string","format":"byte","description":"raw is the raw ethereum transaction","name":"raw","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.MsgEthereumTxResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/min_gas_price":{"get":{"tags":["Query"],"summary":"GlobalMinGasPrice queries the MinGasPrice\nit's similar to feemarket module's method,\nbut makes the conversion to 18 decimals\nwhen the evm denom is represented with a different precision.","operationId":"Erc20Query_GlobalMinGasPrice","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryGlobalMinGasPriceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/params":{"get":{"tags":["Query"],"summary":"Params queries the parameters of x/vm module.","operationId":"Erc20Query_ParamsMixin25","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/storage/{address}/{key}":{"get":{"tags":["Query"],"summary":"Storage queries the balance of all coins for a single account.","operationId":"Erc20Query_Storage","parameters":[{"type":"string","description":"address is the ethereum hex address to query the storage state for.","name":"address","in":"path","required":true},{"type":"string","description":"key defines the key of the storage state","name":"key","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryStorageResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/trace_block":{"get":{"tags":["Query"],"summary":"TraceBlock implements the `debug_traceBlockByNumber` and\n`debug_traceBlockByHash` rpc api","operationId":"Erc20Query_TraceBlock","parameters":[{"type":"string","description":"tracer is a custom javascript tracer","name":"trace_config.tracer","in":"query"},{"type":"string","description":"timeout overrides the default timeout of 5 seconds for JavaScript-based\ntracing calls","name":"trace_config.timeout","in":"query"},{"type":"string","format":"uint64","description":"reexec defines the number of blocks the tracer is willing to go back","name":"trace_config.reexec","in":"query"},{"type":"boolean","description":"disable_stack switches stack capture","name":"trace_config.disable_stack","in":"query"},{"type":"boolean","description":"disable_storage switches storage capture","name":"trace_config.disable_storage","in":"query"},{"type":"boolean","description":"debug can be used to print output during capture end","name":"trace_config.debug","in":"query"},{"type":"integer","format":"int32","description":"limit defines the maximum length of output, but zero means unlimited","name":"trace_config.limit","in":"query"},{"type":"string","description":"homestead_block switch (nil no fork, 0 = already homestead)","name":"trace_config.overrides.homestead_block","in":"query"},{"type":"string","description":"dao_fork_block corresponds to TheDAO hard-fork switch block (nil no fork)","name":"trace_config.overrides.dao_fork_block","in":"query"},{"type":"boolean","description":"dao_fork_support defines whether the nodes supports or opposes the DAO\nhard-fork","name":"trace_config.overrides.dao_fork_support","in":"query"},{"type":"string","description":"eip150_block: EIP150 implements the Gas price changes\n(https://github.com/ethereum/EIPs/issues/150) EIP150 HF block (nil no fork)","name":"trace_config.overrides.eip150_block","in":"query"},{"type":"string","description":"eip155_block: EIP155Block HF block","name":"trace_config.overrides.eip155_block","in":"query"},{"type":"string","description":"eip158_block: EIP158 HF block","name":"trace_config.overrides.eip158_block","in":"query"},{"type":"string","description":"byzantium_block: Byzantium switch block (nil no fork, 0 = already on\nbyzantium)","name":"trace_config.overrides.byzantium_block","in":"query"},{"type":"string","description":"constantinople_block: Constantinople switch block (nil no fork, 0 = already\nactivated)","name":"trace_config.overrides.constantinople_block","in":"query"},{"type":"string","description":"petersburg_block: Petersburg switch block (nil same as Constantinople)","name":"trace_config.overrides.petersburg_block","in":"query"},{"type":"string","description":"istanbul_block: Istanbul switch block (nil no fork, 0 = already on\nistanbul)","name":"trace_config.overrides.istanbul_block","in":"query"},{"type":"string","description":"muir_glacier_block: Eip-2384 (bomb delay) switch block (nil no fork, 0 =\nalready activated)","name":"trace_config.overrides.muir_glacier_block","in":"query"},{"type":"string","description":"berlin_block: Berlin switch block (nil = no fork, 0 = already on berlin)","name":"trace_config.overrides.berlin_block","in":"query"},{"type":"string","description":"london_block: London switch block (nil = no fork, 0 = already on london)","name":"trace_config.overrides.london_block","in":"query"},{"type":"string","description":"arrow_glacier_block: Eip-4345 (bomb delay) switch block (nil = no fork, 0 =\nalready activated)","name":"trace_config.overrides.arrow_glacier_block","in":"query"},{"type":"string","description":"gray_glacier_block: EIP-5133 (bomb delay) switch block (nil = no fork, 0 =\nalready activated)","name":"trace_config.overrides.gray_glacier_block","in":"query"},{"type":"string","description":"merge_netsplit_block: Virtual fork after The Merge to use as a network\nsplitter","name":"trace_config.overrides.merge_netsplit_block","in":"query"},{"type":"string","format":"uint64","description":"chain_id is the id of the chain (EIP-155)","name":"trace_config.overrides.chain_id","in":"query"},{"type":"string","description":"denom is the denomination used on the EVM","name":"trace_config.overrides.denom","in":"query"},{"type":"string","format":"uint64","description":"decimals is the real decimal precision of the denomination used on the EVM","name":"trace_config.overrides.decimals","in":"query"},{"type":"string","description":"shanghai_time: Shanghai switch time (nil = no fork, 0 = already on\nshanghai)","name":"trace_config.overrides.shanghai_time","in":"query"},{"type":"string","description":"cancun_time: Cancun switch time (nil = no fork, 0 = already on cancun)","name":"trace_config.overrides.cancun_time","in":"query"},{"type":"string","description":"prague_time: Prague switch time (nil = no fork, 0 = already on prague)","name":"trace_config.overrides.prague_time","in":"query"},{"type":"string","description":"verkle_time: Verkle switch time (nil = no fork, 0 = already on verkle)","name":"trace_config.overrides.verkle_time","in":"query"},{"type":"string","description":"osaka_time: Osaka switch time (nil = no fork, 0 = already on osaka)","name":"trace_config.overrides.osaka_time","in":"query"},{"type":"boolean","description":"enable_memory switches memory capture","name":"trace_config.enable_memory","in":"query"},{"type":"boolean","description":"enable_return_data switches the capture of return data","name":"trace_config.enable_return_data","in":"query"},{"type":"string","description":"tracer_json_config configures the tracer using a JSON string","name":"trace_config.tracer_json_config","in":"query"},{"type":"string","format":"int64","description":"block_number of the traced block","name":"block_number","in":"query"},{"type":"string","description":"block_hash (hex) of the traced block","name":"block_hash","in":"query"},{"type":"string","format":"date-time","description":"block_time of the traced block","name":"block_time","in":"query"},{"type":"string","format":"byte","description":"proposer_address is the address of the requested block","name":"proposer_address","in":"query"},{"type":"string","format":"int64","description":"chain_id is the eip155 chain id parsed from the requested block header","name":"chain_id","in":"query"},{"type":"string","format":"int64","description":"block_max_gas of the traced block","name":"block_max_gas","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryTraceBlockResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/trace_tx":{"get":{"tags":["Query"],"summary":"TraceTx implements the `debug_traceTransaction` rpc api","operationId":"Erc20Query_TraceTx","parameters":[{"type":"string","format":"byte","description":"from is the bytes of ethereum signer address. This address value is checked\nagainst the address derived from the signature (V, R, S) using the\nsecp256k1 elliptic curve","name":"msg.from","in":"query"},{"type":"string","format":"byte","description":"raw is the raw ethereum transaction","name":"msg.raw","in":"query"},{"type":"string","description":"tracer is a custom javascript tracer","name":"trace_config.tracer","in":"query"},{"type":"string","description":"timeout overrides the default timeout of 5 seconds for JavaScript-based\ntracing calls","name":"trace_config.timeout","in":"query"},{"type":"string","format":"uint64","description":"reexec defines the number of blocks the tracer is willing to go back","name":"trace_config.reexec","in":"query"},{"type":"boolean","description":"disable_stack switches stack capture","name":"trace_config.disable_stack","in":"query"},{"type":"boolean","description":"disable_storage switches storage capture","name":"trace_config.disable_storage","in":"query"},{"type":"boolean","description":"debug can be used to print output during capture end","name":"trace_config.debug","in":"query"},{"type":"integer","format":"int32","description":"limit defines the maximum length of output, but zero means unlimited","name":"trace_config.limit","in":"query"},{"type":"string","description":"homestead_block switch (nil no fork, 0 = already homestead)","name":"trace_config.overrides.homestead_block","in":"query"},{"type":"string","description":"dao_fork_block corresponds to TheDAO hard-fork switch block (nil no fork)","name":"trace_config.overrides.dao_fork_block","in":"query"},{"type":"boolean","description":"dao_fork_support defines whether the nodes supports or opposes the DAO\nhard-fork","name":"trace_config.overrides.dao_fork_support","in":"query"},{"type":"string","description":"eip150_block: EIP150 implements the Gas price changes\n(https://github.com/ethereum/EIPs/issues/150) EIP150 HF block (nil no fork)","name":"trace_config.overrides.eip150_block","in":"query"},{"type":"string","description":"eip155_block: EIP155Block HF block","name":"trace_config.overrides.eip155_block","in":"query"},{"type":"string","description":"eip158_block: EIP158 HF block","name":"trace_config.overrides.eip158_block","in":"query"},{"type":"string","description":"byzantium_block: Byzantium switch block (nil no fork, 0 = already on\nbyzantium)","name":"trace_config.overrides.byzantium_block","in":"query"},{"type":"string","description":"constantinople_block: Constantinople switch block (nil no fork, 0 = already\nactivated)","name":"trace_config.overrides.constantinople_block","in":"query"},{"type":"string","description":"petersburg_block: Petersburg switch block (nil same as Constantinople)","name":"trace_config.overrides.petersburg_block","in":"query"},{"type":"string","description":"istanbul_block: Istanbul switch block (nil no fork, 0 = already on\nistanbul)","name":"trace_config.overrides.istanbul_block","in":"query"},{"type":"string","description":"muir_glacier_block: Eip-2384 (bomb delay) switch block (nil no fork, 0 =\nalready activated)","name":"trace_config.overrides.muir_glacier_block","in":"query"},{"type":"string","description":"berlin_block: Berlin switch block (nil = no fork, 0 = already on berlin)","name":"trace_config.overrides.berlin_block","in":"query"},{"type":"string","description":"london_block: London switch block (nil = no fork, 0 = already on london)","name":"trace_config.overrides.london_block","in":"query"},{"type":"string","description":"arrow_glacier_block: Eip-4345 (bomb delay) switch block (nil = no fork, 0 =\nalready activated)","name":"trace_config.overrides.arrow_glacier_block","in":"query"},{"type":"string","description":"gray_glacier_block: EIP-5133 (bomb delay) switch block (nil = no fork, 0 =\nalready activated)","name":"trace_config.overrides.gray_glacier_block","in":"query"},{"type":"string","description":"merge_netsplit_block: Virtual fork after The Merge to use as a network\nsplitter","name":"trace_config.overrides.merge_netsplit_block","in":"query"},{"type":"string","format":"uint64","description":"chain_id is the id of the chain (EIP-155)","name":"trace_config.overrides.chain_id","in":"query"},{"type":"string","description":"denom is the denomination used on the EVM","name":"trace_config.overrides.denom","in":"query"},{"type":"string","format":"uint64","description":"decimals is the real decimal precision of the denomination used on the EVM","name":"trace_config.overrides.decimals","in":"query"},{"type":"string","description":"shanghai_time: Shanghai switch time (nil = no fork, 0 = already on\nshanghai)","name":"trace_config.overrides.shanghai_time","in":"query"},{"type":"string","description":"cancun_time: Cancun switch time (nil = no fork, 0 = already on cancun)","name":"trace_config.overrides.cancun_time","in":"query"},{"type":"string","description":"prague_time: Prague switch time (nil = no fork, 0 = already on prague)","name":"trace_config.overrides.prague_time","in":"query"},{"type":"string","description":"verkle_time: Verkle switch time (nil = no fork, 0 = already on verkle)","name":"trace_config.overrides.verkle_time","in":"query"},{"type":"string","description":"osaka_time: Osaka switch time (nil = no fork, 0 = already on osaka)","name":"trace_config.overrides.osaka_time","in":"query"},{"type":"boolean","description":"enable_memory switches memory capture","name":"trace_config.enable_memory","in":"query"},{"type":"boolean","description":"enable_return_data switches the capture of return data","name":"trace_config.enable_return_data","in":"query"},{"type":"string","description":"tracer_json_config configures the tracer using a JSON string","name":"trace_config.tracer_json_config","in":"query"},{"type":"string","format":"int64","description":"block_number of requested transaction","name":"block_number","in":"query"},{"type":"string","description":"block_hash of requested transaction","name":"block_hash","in":"query"},{"type":"string","format":"date-time","description":"block_time of requested transaction","name":"block_time","in":"query"},{"type":"string","format":"byte","description":"proposer_address is the proposer of the requested block","name":"proposer_address","in":"query"},{"type":"string","format":"int64","description":"chain_id is the eip155 chain id parsed from the requested block header","name":"chain_id","in":"query"},{"type":"string","format":"int64","description":"block_max_gas of the block of the requested transaction","name":"block_max_gas","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryTraceTxResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/cosmos/evm/vm/v1/validator_account/{cons_address}":{"get":{"tags":["Query"],"summary":"ValidatorAccount queries an Ethereum account's from a validator consensus\nAddress.","operationId":"Erc20Query_ValidatorAccount","parameters":[{"type":"string","description":"cons_address is the validator cons address to query the account for.","name":"cons_address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/cosmos.evm.vm.v1.QueryValidatorAccountResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lyfeblocnetwork.lyfeblocnetwork.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComlyfeloopinclyfeblocNetworkMsg_UpdateParams","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lyfeblocnetwork.lyfeblocnetwork.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lyfeblocnetwork.lyfeblocnetwork.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lyfeloopinc/lyfebloc-network/lyfeblocnetwork/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComlyfeloopinclyfeblocNetworkQuery_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lyfeblocnetwork.lyfeblocnetwork.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}}},"definitions":{"cosmos.base.query.v1beta1.PageRequest":{"description":"message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }","type":"object","title":"PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:","properties":{"count_total":{"description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","type":"boolean"},"key":{"description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","type":"string","format":"byte"},"limit":{"description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","type":"string","format":"uint64"},"offset":{"description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","type":"string","format":"uint64"},"reverse":{"description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","type":"boolean"}}},"cosmos.base.query.v1beta1.PageResponse":{"description":"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }","type":"object","properties":{"next_key":{"description":"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.","type":"string","format":"byte"},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}}},"cosmos.base.v1beta1.Coin":{"description":"Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto.","type":"object","properties":{"amount":{"type":"string"},"denom":{"type":"string"}}},"cosmos.evm.erc20.v1.MsgConvertCoinResponse":{"type":"object","title":"MsgConvertCoinResponse returns no fields"},"cosmos.evm.erc20.v1.MsgConvertERC20Response":{"type":"object","title":"MsgConvertERC20Response returns no fields"},"cosmos.evm.erc20.v1.MsgRegisterERC20":{"description":"MsgRegisterERC20 is the Msg/RegisterERC20 request type for registering\nan Erc20 contract token pair.","type":"object","properties":{"erc20addresses":{"type":"array","title":"erc20addresses is a slice of ERC20 token contract hex addresses","items":{"type":"string"}},"signer":{"type":"string","title":"signer is the address registering the erc20 pairs"}}},"cosmos.evm.erc20.v1.MsgRegisterERC20Response":{"description":"MsgRegisterERC20Response defines the response structure for executing a\nMsgRegisterERC20 message.","type":"object"},"cosmos.evm.erc20.v1.MsgToggleConversion":{"description":"MsgToggleConversion is the Msg/MsgToggleConversion request type for toggling\nan Erc20 contract conversion capability.","type":"object","properties":{"authority":{"description":"authority is the address of the governance account.","type":"string"},"token":{"type":"string","title":"token identifier can be either the hex contract address of the ERC20 or the\nCosmos base denomination"}}},"cosmos.evm.erc20.v1.MsgToggleConversionResponse":{"description":"MsgToggleConversionResponse defines the response structure for executing a\nToggleConversion message.","type":"object"},"cosmos.evm.erc20.v1.MsgUpdateParams":{"type":"object","title":"MsgUpdateParams is the Msg/UpdateParams request type for Erc20 parameters.\nSince: cosmos-sdk 0.47","properties":{"authority":{"description":"authority is the address of the governance account.","type":"string"},"params":{"description":"params defines the x/vm parameters to update.\nNOTE: All parameters must be supplied.","$ref":"#/definitions/cosmos.evm.erc20.v1.Params"}}},"cosmos.evm.erc20.v1.MsgUpdateParamsResponse":{"type":"object","title":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.\nSince: cosmos-sdk 0.47"},"cosmos.evm.erc20.v1.Owner":{"description":"Owner enumerates the ownership of a ERC20 contract.\n\n - OWNER_UNSPECIFIED: OWNER_UNSPECIFIED defines an invalid/undefined owner.\n - OWNER_MODULE: OWNER_MODULE - erc20 is owned by the erc20 module account.\n - OWNER_EXTERNAL: OWNER_EXTERNAL - erc20 is owned by an external account.","type":"string","default":"OWNER_UNSPECIFIED","enum":["OWNER_UNSPECIFIED","OWNER_MODULE","OWNER_EXTERNAL"]},"cosmos.evm.erc20.v1.Params":{"type":"object","title":"Params defines the erc20 module params","properties":{"enable_erc20":{"description":"enable_erc20 is the parameter to enable the conversion of Cosmos coins \u003c--\u003e\nERC20 tokens.","type":"boolean"},"permissionless_registration":{"type":"boolean","title":"permissionless_registration is the parameter that allows ERC20s to be\npermissionlessly registered to be converted to bank tokens and vice versa"}}},"cosmos.evm.erc20.v1.QueryParamsResponse":{"description":"QueryParamsResponse is the response type for the Query/Params RPC\nmethod.","type":"object","properties":{"params":{"title":"params are the erc20 module parameters","$ref":"#/definitions/cosmos.evm.erc20.v1.Params"}}},"cosmos.evm.erc20.v1.QueryTokenPairResponse":{"description":"QueryTokenPairResponse is the response type for the Query/TokenPair RPC\nmethod.","type":"object","properties":{"token_pair":{"title":"token_pairs returns the info about a registered token pair for the erc20\nmodule","$ref":"#/definitions/cosmos.evm.erc20.v1.TokenPair"}}},"cosmos.evm.erc20.v1.QueryTokenPairsResponse":{"description":"QueryTokenPairsResponse is the response type for the Query/TokenPairs RPC\nmethod.","type":"object","properties":{"pagination":{"description":"pagination defines the pagination in the response.","$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"token_pairs":{"type":"array","title":"token_pairs is a slice of registered token pairs for the erc20 module","items":{"type":"object","$ref":"#/definitions/cosmos.evm.erc20.v1.TokenPair"}}}},"cosmos.evm.erc20.v1.TokenPair":{"description":"TokenPair defines an instance that records a pairing (mapping) consisting of a native\nCosmos Coin and an ERC20 token address. The \"pair\" does not imply an asset swap exchange.","type":"object","properties":{"contract_owner":{"title":"contract_owner is the an ENUM specifying the type of ERC20 owner (0\ninvalid, 1 ModuleAccount, 2 external address)","$ref":"#/definitions/cosmos.evm.erc20.v1.Owner"},"denom":{"type":"string","title":"denom defines the cosmos base denomination to be mapped to"},"enabled":{"type":"boolean","title":"enabled defines the token mapping enable status"},"erc20_address":{"type":"string","title":"erc20_address is the hex address of ERC20 contract token"}}},"cosmos.evm.feemarket.v1.MsgUpdateParams":{"description":"MsgUpdateParams defines a Msg for updating the x/feemarket module parameters.","type":"object","properties":{"authority":{"description":"authority is the address of the governance account.","type":"string"},"params":{"description":"params defines the x/feemarket parameters to update.\nNOTE: All parameters must be supplied.","$ref":"#/definitions/cosmos.evm.feemarket.v1.Params"}}},"cosmos.evm.feemarket.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"cosmos.evm.feemarket.v1.Params":{"type":"object","title":"Params defines the EVM module parameters","properties":{"base_fee":{"description":"base_fee for EIP-1559 blocks.","type":"string"},"base_fee_change_denominator":{"description":"base_fee_change_denominator bounds the amount the base fee can change\nbetween blocks.","type":"integer","format":"int64"},"elasticity_multiplier":{"description":"elasticity_multiplier bounds the maximum gas limit an EIP-1559 block may\nhave.","type":"integer","format":"int64"},"enable_height":{"description":"enable_height defines at which block height the base fee calculation is\nenabled.","type":"string","format":"int64"},"min_gas_multiplier":{"type":"string","title":"min_gas_multiplier bounds the minimum gas used to be charged\nto senders based on gas limit"},"min_gas_price":{"type":"string","title":"min_gas_price defines the minimum gas price value for cosmos and eth\ntransactions"},"no_base_fee":{"type":"boolean","title":"no_base_fee forces the EIP-1559 base fee to 0 (needed for 0 price calls)"}}},"cosmos.evm.feemarket.v1.QueryBaseFeeResponse":{"description":"QueryBaseFeeResponse returns the EIP1559 base fee.","type":"object","properties":{"base_fee":{"type":"string","title":"base_fee is the EIP1559 base fee"}}},"cosmos.evm.feemarket.v1.QueryBlockGasResponse":{"description":"QueryBlockGasResponse returns block gas used for a given height.","type":"object","properties":{"gas":{"type":"string","format":"int64","title":"gas is the returned block gas"}}},"cosmos.evm.feemarket.v1.QueryParamsResponse":{"description":"QueryParamsResponse defines the response type for querying x/vm parameters.","type":"object","properties":{"params":{"description":"params define the evm module parameters.","$ref":"#/definitions/cosmos.evm.feemarket.v1.Params"}}},"cosmos.evm.precisebank.v1.QueryFractionalBalanceResponse":{"description":"QueryFractionalBalanceResponse defines the response type for\nQuery/FractionalBalance method.","type":"object","properties":{"fractional_balance":{"description":"fractional_balance is the fractional balance of the address.","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}},"cosmos.evm.precisebank.v1.QueryRemainderResponse":{"description":"QueryRemainderResponse defines the response type for Query/Remainder method.","type":"object","properties":{"remainder":{"description":"remainder is the amount backed by the reserve, but not yet owned by any\naccount, i.e. not in circulation.","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}}},"cosmos.evm.vm.v1.AccessControl":{"type":"object","title":"AccessControl defines the permission policy of the EVM\nfor creating and calling contracts","properties":{"call":{"title":"call defines the permission policy for calling contracts","$ref":"#/definitions/cosmos.evm.vm.v1.AccessControlType"},"create":{"title":"create defines the permission policy for creating contracts","$ref":"#/definitions/cosmos.evm.vm.v1.AccessControlType"}}},"cosmos.evm.vm.v1.AccessControlType":{"type":"object","title":"AccessControlType defines the permission type for policies","properties":{"access_control_list":{"type":"array","title":"access_control_list defines defines different things depending on the\nAccessType:\n- ACCESS_TYPE_PERMISSIONLESS: list of addresses that are blocked from\nperforming the operation\n- ACCESS_TYPE_RESTRICTED: ignored\n- ACCESS_TYPE_PERMISSIONED: list of addresses that are allowed to perform\nthe operation","items":{"type":"string"}},"access_type":{"title":"access_type defines which type of permission is required for the operation","$ref":"#/definitions/cosmos.evm.vm.v1.AccessType"}}},"cosmos.evm.vm.v1.AccessType":{"description":"- ACCESS_TYPE_PERMISSIONLESS: ACCESS_TYPE_PERMISSIONLESS does not restrict the operation to anyone\n - ACCESS_TYPE_RESTRICTED: ACCESS_TYPE_RESTRICTED restrict the operation to anyone\n - ACCESS_TYPE_PERMISSIONED: ACCESS_TYPE_PERMISSIONED only allows the operation for specific addresses","type":"string","title":"AccessType defines the types of permissions for the operations","default":"ACCESS_TYPE_PERMISSIONLESS","enum":["ACCESS_TYPE_PERMISSIONLESS","ACCESS_TYPE_RESTRICTED","ACCESS_TYPE_PERMISSIONED"]},"cosmos.evm.vm.v1.ChainConfig":{"description":"ChainConfig defines the Ethereum ChainConfig parameters using *sdk.Int values\ninstead of *big.Int.","type":"object","properties":{"arrow_glacier_block":{"type":"string","title":"arrow_glacier_block: Eip-4345 (bomb delay) switch block (nil = no fork, 0 =\nalready activated)"},"berlin_block":{"type":"string","title":"berlin_block: Berlin switch block (nil = no fork, 0 = already on berlin)"},"byzantium_block":{"type":"string","title":"byzantium_block: Byzantium switch block (nil no fork, 0 = already on\nbyzantium)"},"cancun_time":{"type":"string","title":"cancun_time: Cancun switch time (nil = no fork, 0 = already on cancun)"},"chain_id":{"type":"string","format":"uint64","title":"chain_id is the id of the chain (EIP-155)"},"constantinople_block":{"type":"string","title":"constantinople_block: Constantinople switch block (nil no fork, 0 = already\nactivated)"},"dao_fork_block":{"type":"string","title":"dao_fork_block corresponds to TheDAO hard-fork switch block (nil no fork)"},"dao_fork_support":{"type":"boolean","title":"dao_fork_support defines whether the nodes supports or opposes the DAO\nhard-fork"},"decimals":{"type":"string","format":"uint64","title":"decimals is the real decimal precision of the denomination used on the EVM"},"denom":{"type":"string","title":"denom is the denomination used on the EVM"},"eip150_block":{"type":"string","title":"eip150_block: EIP150 implements the Gas price changes\n(https://github.com/ethereum/EIPs/issues/150) EIP150 HF block (nil no fork)"},"eip155_block":{"type":"string","title":"eip155_block: EIP155Block HF block"},"eip158_block":{"type":"string","title":"eip158_block: EIP158 HF block"},"gray_glacier_block":{"type":"string","title":"gray_glacier_block: EIP-5133 (bomb delay) switch block (nil = no fork, 0 =\nalready activated)"},"homestead_block":{"type":"string","title":"homestead_block switch (nil no fork, 0 = already homestead)"},"istanbul_block":{"type":"string","title":"istanbul_block: Istanbul switch block (nil no fork, 0 = already on\nistanbul)"},"london_block":{"type":"string","title":"london_block: London switch block (nil = no fork, 0 = already on london)"},"merge_netsplit_block":{"type":"string","title":"merge_netsplit_block: Virtual fork after The Merge to use as a network\nsplitter"},"muir_glacier_block":{"type":"string","title":"muir_glacier_block: Eip-2384 (bomb delay) switch block (nil no fork, 0 =\nalready activated)"},"osaka_time":{"type":"string","title":"osaka_time: Osaka switch time (nil = no fork, 0 = already on osaka)"},"petersburg_block":{"type":"string","title":"petersburg_block: Petersburg switch block (nil same as Constantinople)"},"prague_time":{"type":"string","title":"prague_time: Prague switch time (nil = no fork, 0 = already on prague)"},"shanghai_time":{"type":"string","title":"shanghai_time: Shanghai switch time (nil = no fork, 0 = already on\nshanghai)"},"verkle_time":{"type":"string","title":"verkle_time: Verkle switch time (nil = no fork, 0 = already on verkle)"}}},"cosmos.evm.vm.v1.EstimateGasResponse":{"type":"object","title":"EstimateGasResponse defines EstimateGas response","properties":{"gas":{"type":"string","format":"uint64","title":"gas returns the estimated gas"},"ret":{"type":"string","format":"byte","title":"ret is the returned data from evm function (result or data supplied with\nrevert opcode)"},"vm_error":{"type":"string","title":"vm_error is the error returned by vm execution"}}},"cosmos.evm.vm.v1.Log":{"description":"Log represents an protobuf compatible Ethereum Log that defines a contract\nlog event. These events are generated by the LOG opcode and stored/indexed by\nthe node.\n\nNOTE: address, topics and data are consensus fields. The rest of the fields\nare derived, i.e. filled in by the nodes, but not secured by consensus.","type":"object","properties":{"address":{"type":"string","title":"address of the contract that generated the event"},"block_hash":{"type":"string","title":"block_hash of the block in which the transaction was included"},"block_number":{"type":"string","format":"uint64","title":"block_number of the block in which the transaction was included"},"data":{"type":"string","format":"byte","title":"data which is supplied by the contract, usually ABI-encoded"},"index":{"type":"string","format":"uint64","title":"index of the log in the block"},"removed":{"description":"removed is true if this log was reverted due to a chain\nreorganisation. You must pay attention to this field if you receive logs\nthrough a filter query.","type":"boolean"},"topics":{"description":"topics is a list of topics provided by the contract.","type":"array","items":{"type":"string"}},"tx_hash":{"type":"string","title":"tx_hash is the transaction hash"},"tx_index":{"type":"string","format":"uint64","title":"tx_index of the transaction in the block"}}},"cosmos.evm.vm.v1.MsgEthereumTx":{"description":"MsgEthereumTx encapsulates an Ethereum transaction as an SDK message.","type":"object","properties":{"from":{"type":"string","format":"byte","title":"from is the bytes of ethereum signer address. This address value is checked\nagainst the address derived from the signature (V, R, S) using the\nsecp256k1 elliptic curve"},"raw":{"type":"string","format":"byte","title":"raw is the raw ethereum transaction"}}},"cosmos.evm.vm.v1.MsgEthereumTxResponse":{"description":"MsgEthereumTxResponse defines the Msg/EthereumTx response type.","type":"object","properties":{"gas_used":{"type":"string","format":"uint64","title":"gas_used specifies how much gas was consumed by the transaction"},"hash":{"type":"string","title":"hash of the ethereum transaction in hex format. This hash differs from the\nCometBFT sha256 hash of the transaction bytes. See\nhttps://github.com/tendermint/tendermint/issues/6539 for reference"},"logs":{"description":"logs contains the transaction hash and the proto-compatible ethereum\nlogs.","type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.evm.vm.v1.Log"}},"ret":{"type":"string","format":"byte","title":"ret is the returned data from evm function (result or data supplied with\nrevert opcode)"},"vm_error":{"type":"string","title":"vm_error is the error returned by vm execution"}}},"cosmos.evm.vm.v1.MsgRegisterPreinstalls":{"description":"MsgRegisterPreinstalls defines a Msg for creating preinstalls in evm state.","type":"object","properties":{"authority":{"description":"authority is the address of the governance account.","type":"string"},"preinstalls":{"description":"preinstalls defines the preinstalls to create.","type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.evm.vm.v1.Preinstall"}}}},"cosmos.evm.vm.v1.MsgRegisterPreinstallsResponse":{"description":"MsgRegisterPreinstallsResponse defines the response structure for executing a\nMsgRegisterPreinstalls message.","type":"object"},"cosmos.evm.vm.v1.MsgUpdateParams":{"description":"MsgUpdateParams defines a Msg for updating the x/vm module parameters.","type":"object","properties":{"authority":{"description":"authority is the address of the governance account.","type":"string"},"params":{"description":"params defines the x/vm parameters to update.\nNOTE: All parameters must be supplied.","$ref":"#/definitions/cosmos.evm.vm.v1.Params"}}},"cosmos.evm.vm.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"cosmos.evm.vm.v1.Params":{"type":"object","title":"Params defines the EVM module parameters","properties":{"access_control":{"title":"access_control defines the permission policy of the EVM","$ref":"#/definitions/cosmos.evm.vm.v1.AccessControl"},"active_static_precompiles":{"type":"array","title":"active_static_precompiles defines the slice of hex addresses of the\nprecompiled contracts that are active","items":{"type":"string"}},"evm_channels":{"type":"array","title":"evm_channels is the list of channel identifiers from EVM compatible chains","items":{"type":"string"}},"evm_denom":{"description":"evm_denom represents the token denomination used to run the EVM state\ntransitions.","type":"string"},"extra_eips":{"type":"array","title":"extra_eips defines the additional EIPs for the vm.Config","items":{"type":"string","format":"int64"}},"history_serve_window":{"type":"string","format":"uint64"}}},"cosmos.evm.vm.v1.Preinstall":{"type":"object","title":"Preinstall defines a contract that is preinstalled on-chain with a specific\ncontract address and bytecode","properties":{"address":{"type":"string","title":"address in hex format of the preinstall contract"},"code":{"type":"string","title":"code in hex format for the preinstall contract"},"name":{"type":"string","title":"name of the preinstall contract"}}},"cosmos.evm.vm.v1.QueryAccountResponse":{"description":"QueryAccountResponse is the response type for the Query/Account RPC method.","type":"object","properties":{"balance":{"description":"balance is the balance of the EVM denomination.","type":"string"},"code_hash":{"description":"code_hash is the hex-formatted code bytes from the EOA.","type":"string"},"nonce":{"description":"nonce is the account's sequence number.","type":"string","format":"uint64"}}},"cosmos.evm.vm.v1.QueryBalanceResponse":{"description":"QueryBalanceResponse is the response type for the Query/Balance RPC method.","type":"object","properties":{"balance":{"description":"balance is the balance of the EVM denomination.","type":"string"}}},"cosmos.evm.vm.v1.QueryBaseFeeResponse":{"description":"QueryBaseFeeResponse returns the EIP1559 base fee.","type":"object","properties":{"base_fee":{"type":"string","title":"base_fee is the EIP1559 base fee"}}},"cosmos.evm.vm.v1.QueryCodeResponse":{"description":"QueryCodeResponse is the response type for the Query/Code RPC\nmethod.","type":"object","properties":{"code":{"description":"code represents the code bytes from an ethereum address.","type":"string","format":"byte"}}},"cosmos.evm.vm.v1.QueryConfigResponse":{"description":"QueryConfigResponse returns the EVM config.","type":"object","properties":{"config":{"title":"config is the evm configuration","$ref":"#/definitions/cosmos.evm.vm.v1.ChainConfig"}}},"cosmos.evm.vm.v1.QueryCosmosAccountResponse":{"description":"QueryCosmosAccountResponse is the response type for the Query/CosmosAccount\nRPC method.","type":"object","properties":{"account_number":{"type":"string","format":"uint64","title":"account_number is the account number"},"cosmos_address":{"description":"cosmos_address is the cosmos address of the account.","type":"string"},"sequence":{"description":"sequence is the account's sequence number.","type":"string","format":"uint64"}}},"cosmos.evm.vm.v1.QueryGlobalMinGasPriceResponse":{"type":"object","title":"QueryGlobalMinGasPriceResponse returns the GlobalMinGasPrice","properties":{"min_gas_price":{"type":"string","title":"min_gas_price is the feemarket's min_gas_price"}}},"cosmos.evm.vm.v1.QueryParamsResponse":{"description":"QueryParamsResponse defines the response type for querying x/vm parameters.","type":"object","properties":{"params":{"description":"params define the evm module parameters.","$ref":"#/definitions/cosmos.evm.vm.v1.Params"}}},"cosmos.evm.vm.v1.QueryStorageResponse":{"description":"QueryStorageResponse is the response type for the Query/Storage RPC\nmethod.","type":"object","properties":{"value":{"description":"value defines the storage state value hash associated with the given key.","type":"string"}}},"cosmos.evm.vm.v1.QueryTraceBlockResponse":{"type":"object","title":"QueryTraceBlockResponse defines TraceBlock response","properties":{"data":{"type":"string","format":"byte","title":"data is the response serialized in bytes"}}},"cosmos.evm.vm.v1.QueryTraceTxResponse":{"type":"object","title":"QueryTraceTxResponse defines TraceTx response","properties":{"data":{"type":"string","format":"byte","title":"data is the response serialized in bytes"}}},"cosmos.evm.vm.v1.QueryValidatorAccountResponse":{"description":"QueryValidatorAccountResponse is the response type for the\nQuery/ValidatorAccount RPC method.","type":"object","properties":{"account_address":{"description":"account_address is the cosmos address of the account in bech32 format.","type":"string"},"account_number":{"type":"string","format":"uint64","title":"account_number is the account number"},"sequence":{"description":"sequence is the account's sequence number.","type":"string","format":"uint64"}}},"cosmos.evm.vm.v1.TraceConfig":{"description":"TraceConfig holds extra parameters to trace functions.","type":"object","properties":{"debug":{"type":"boolean","title":"debug can be used to print output during capture end"},"disable_stack":{"type":"boolean","title":"disable_stack switches stack capture"},"disable_storage":{"type":"boolean","title":"disable_storage switches storage capture"},"enable_memory":{"type":"boolean","title":"enable_memory switches memory capture"},"enable_return_data":{"type":"boolean","title":"enable_return_data switches the capture of return data"},"limit":{"type":"integer","format":"int32","title":"limit defines the maximum length of output, but zero means unlimited"},"overrides":{"title":"overrides can be used to execute a trace using future fork rules","$ref":"#/definitions/cosmos.evm.vm.v1.ChainConfig"},"reexec":{"type":"string","format":"uint64","title":"reexec defines the number of blocks the tracer is willing to go back"},"timeout":{"type":"string","title":"timeout overrides the default timeout of 5 seconds for JavaScript-based\ntracing calls"},"tracer":{"type":"string","title":"tracer is a custom javascript tracer"},"tracer_json_config":{"type":"string","title":"tracer_json_config configures the tracer using a JSON string"}}},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/google.protobuf.Any"}},"message":{"type":"string"}}},"lyfeblocnetwork.lyfeblocnetwork.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/lyfeblocnetwork.lyfeblocnetwork.v1.Params"}}},"lyfeblocnetwork.lyfeblocnetwork.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"lyfeblocnetwork.lyfeblocnetwork.v1.Params":{"description":"Params defines the parameters for the module.","type":"object"},"lyfeblocnetwork.lyfeblocnetwork.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/lyfeblocnetwork.lyfeblocnetwork.v1.Params"}}}},"tags":[{"name":"Query"},{"name":"Msg"}]}